{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/tugas-big-data/src/component/chartComponent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\n\nclass ChartComponent extends React.Component {\n  compareNumbers(a, b) {\n    return a - b;\n  }\n\n  render() {\n    var self = this,\n        data = this.props.data,\n        layered = this.props.grouping === 'layered' ? true : false,\n        stacked = this.props.grouping === 'stacked' ? true : false,\n        opaque = this.props.opaque,\n        max = 0;\n\n    for (var i = data.length; i--;) {\n      for (var j = data[i].length; j--;) {\n        if (data[i][j] > max) {\n          max = data[i][j];\n        }\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: 'Charts' + (this.props.horizontal ? ' horizontal' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, data.map(function (serie, serieIndex) {\n      var sortedSerie = serie.slice(0),\n          sum;\n      sum = serie.reduce(function (carry, current) {\n        return carry + current;\n      }, 0);\n      sortedSerie.sort(compareNumbers);\n      return React.createElement(\"div\", {\n        className: 'Charts--serie ' + self.props.grouping,\n        key: serieIndex,\n        style: {\n          height: self.props.height ? self.props.height : 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, self.props.labels[serieIndex]), serie.map(function (item, itemIndex) {\n        var color = self.props.colors[itemIndex],\n            style,\n            size = item / (stacked ? sum : max) * 100;\n        style = {\n          backgroundColor: color,\n          opacity: opaque ? 1 : item / max + .05,\n          zIndex: item\n        };\n\n        if (self.props.horizontal) {\n          style['width'] = size + '%';\n        } else {\n          style['height'] = size + '%';\n        }\n\n        if (layered && !self.props.horizontal) {\n          //console.log(sortedSerie, serie, sortedSerie.indexOf(item));\n          style['right'] = sortedSerie.indexOf(item) / (serie.length + 1) * 100 + '%'; // style['left'] = (itemIndex * 10) + '%';\n        }\n\n        return React.createElement(\"div\", {\n          className: 'Charts--item ' + self.props.grouping,\n          style: style,\n          key: itemIndex,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          style: {\n            color: color\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, item));\n      }));\n    }));\n  }\n\n}\n\nexport default ChartComponent;","map":{"version":3,"sources":["/Users/macintosh/tugas-big-data/src/component/chartComponent.js"],"names":["React","PropTypes","Chart","isEqual","keyBy","ChartComponent","Component","compareNumbers","a","b","render","self","data","props","layered","grouping","stacked","opaque","max","i","length","j","horizontal","map","serie","serieIndex","sortedSerie","slice","sum","reduce","carry","current","sort","height","labels","item","itemIndex","color","colors","style","size","backgroundColor","opacity","zIndex","indexOf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\n\nclass ChartComponent extends React.Component {\n    compareNumbers(a, b) {\n        return a - b;\n    }\n    \n    render(){\n\t\tvar self = this,\n\t\t\tdata = this.props.data,\n\t\t\tlayered = this.props.grouping === 'layered' ? true : false,\n\t\t\tstacked = this.props.grouping === 'stacked' ? true : false,\n\t\t\topaque = this.props.opaque,\n\t\t\tmax = 0;\n\t\t\n\t\tfor (var i = data.length; i--; ) {\n\t\t\tfor (var j = data[i].length; j--; ) {\n\t\t\t\tif (data[i][j] > max) {\n\t\t\t\t\tmax = data[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t\t\t\n\t\treturn (\n\t\t\t<div className={ 'Charts' + (this.props.horizontal ? ' horizontal' : '' ) }>\n\t\t\t\t{ data.map(function (serie, serieIndex) {\n\t\t\t\t \tvar sortedSerie = serie.slice(0),\n\t\t\t\t \t\tsum;\n\t\t\t\t \t\n\t\t\t\t \tsum = serie.reduce(function (carry, current) {\n\t\t\t\t \t\treturn carry + current;\n\t\t\t\t\t}, 0);\n\t\t\t\t \tsortedSerie.sort(compareNumbers);\t\t\t\t \t\t\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className={ 'Charts--serie ' + (self.props.grouping) }\n\t\t\t\t \t\t\tkey={ serieIndex }\n\t\t\t\t\t\t\tstyle={{ height: self.props.height ? self.props.height: 'auto' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<label>{ self.props.labels[serieIndex] }</label>\n\t\t\t\t\t\t{ serie.map(function (item, itemIndex) {\n\t\t\t\t\t\t\tvar color = self.props.colors[itemIndex], style,\n\t\t\t\t\t\t\t\tsize = item / (stacked ? sum : max) * 100;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tstyle = {\n\t\t\t\t\t\t\t\tbackgroundColor: color,\n\t\t\t\t\t\t\t\topacity: opaque ? 1 : (item/max + .05),\n\t\t\t\t\t\t\t\tzIndex: item\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (self.props.horizontal) {\n\t\t\t\t\t\t\t\tstyle['width'] = size + '%';\n\t\t\t\t\t\t\t} else {\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tstyle['height'] = size + '%';\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif (layered && !self.props.horizontal) {\n\t\t\t\t\t\t\t\t//console.log(sortedSerie, serie, sortedSerie.indexOf(item));\n\t\t\t\t\t\t\t\tstyle['right'] = ((sortedSerie.indexOf(item) / (serie.length + 1)) * 100) + '%';\n\t\t\t\t\t\t\t\t// style['left'] = (itemIndex * 10) + '%';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t return (\n\t\t\t\t\t\t\t <div\n\t\t\t\t\t\t\t \tclassName={ 'Charts--item ' + (self.props.grouping) }\n\t\t\t\t\t\t\t \tstyle={ style }\n\t\t\t\t\t\t\t\tkey={ itemIndex }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t \t<b style={{ color: color }}>{ item }</b>\n\t\t\t\t\t\t\t </div>\n\t\t\t\t\t\t);\n\t\t\t\t\t\t}) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}) }\n\t\t\t</div>\n\t\t);\n\t}\n}\n  \nexport default ChartComponent;  "]},"metadata":{},"sourceType":"module"}