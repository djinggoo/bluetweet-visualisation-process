{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/tugas-big-data/src/component/index.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Bar } from 'react-chartjs-2';\nimport Chart from 'chart.js';\nimport ChartComponent from './chartComponent';\nimport Legend from './legend';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      series: ['France', 'Italy', 'England', 'Sweden', 'Germany'],\n      labels: ['cats', 'dogs', 'horses', 'ducks', 'cows'],\n      colors: ['#43A19E', '#7B43A1', '#F2317A', '#FF9824', '#58CF6C']\n    };\n  }\n\n  componentDidMount() {\n    this.populateArray();\n    setInterval(this.populateArray, 2000);\n  }\n\n  getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  populateArray() {\n    let data = [],\n        series = 5,\n        //getRandomInt(2, 10),\n    serieLength = 5; //getRandomInt(2, 10);\n\n    for (var i = series; i--;) {\n      var tmp = [];\n\n      for (var j = serieLength; j--;) {\n        tmp.push(getRandomInt(0, 20));\n      }\n\n      data.push(tmp);\n    }\n\n    this.setState({\n      data: data\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"tugas big data analytics\")), React.createElement(\"div\", {\n      className: \"Body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Legend, {\n      labels: this.state.labels,\n      colors: this.state.colors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/macintosh/tugas-big-data/src/component/index.js"],"names":["React","Component","Bar","Chart","ChartComponent","Legend","Home","constructor","props","state","data","series","labels","colors","componentDidMount","populateArray","setInterval","getRandomInt","min","max","Math","floor","random","serieLength","i","tmp","j","push","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AACzBM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAE,EADC;AAEhBC,MAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,OAAX,EAAoB,SAApB,EAA+B,QAA/B,EAAyC,SAAzC,CAFQ;AAGhBC,MAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,EAA2B,OAA3B,EAAoC,MAApC,CAHQ;AAIhBC,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C;AAJQ,KAAX;AAMH;;AAEDC,EAAAA,iBAAiB,GAAG;AACtB,SAAKC,aAAL;AACAC,IAAAA,WAAW,CAAC,KAAKD,aAAN,EAAqB,IAArB,CAAX;AACG;;AAEDE,EAAAA,YAAY,CAACC,GAAD,EAAMC,GAAN,EAAW;AACnB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,CAAX,IAA0CA,GAAjD;AACH;;AAEJH,EAAAA,aAAa,GAAG;AACf,QAAIL,IAAI,GAAG,EAAX;AAAA,QACCC,MAAM,GAAG,CADV;AAAA,QACY;AACXY,IAAAA,WAAW,GAAG,CAFf,CADe,CAGE;;AAEjB,SAAK,IAAIC,CAAC,GAAGb,MAAb,EAAqBa,CAAC,EAAtB,GAA4B;AAC3B,UAAIC,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIC,CAAC,GAAGH,WAAb,EAA0BG,CAAC,EAA3B,GAAiC;AAChCD,QAAAA,GAAG,CAACE,IAAJ,CAASV,YAAY,CAAC,CAAD,EAAI,EAAJ,CAArB;AACA;;AACDP,MAAAA,IAAI,CAACiB,IAAL,CAAUF,GAAV;AACA;;AAED,SAAKG,QAAL,CAAc;AAAElB,MAAAA,IAAI,EAAEA;AAAR,KAAd;AACG;;AAEDmB,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASA,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAG,KAAKpB,KAAL,CAAWG,MAA5B;AAAqC,MAAA,MAAM,EAAG,KAAKH,KAAL,CAAWI,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,CAJJ,CADJ;AAkBH;;AAxDwB;;AA2D7B,eAAeP,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css'\nimport {Bar} from 'react-chartjs-2';\nimport Chart from 'chart.js'\nimport ChartComponent from './chartComponent';\nimport Legend from './legend'\n\nclass Home extends Component {\n    constructor(props){\n        super(props)\n\n        this.state={\n            data: [],\n\t\t\tseries: ['France', 'Italy', 'England', 'Sweden', 'Germany'],\n\t\t\tlabels: ['cats', 'dogs', 'horses', 'ducks', 'cows'],\n\t\t\tcolors: ['#43A19E', '#7B43A1', '#F2317A', '#FF9824', '#58CF6C']\n        }\n    }\n\n    componentDidMount() {\n\t\tthis.populateArray();\n\t\tsetInterval(this.populateArray, 2000);\n    }\n    \n    getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n\tpopulateArray() {\n\t\tlet data = [],\n\t\t\tseries = 5,//getRandomInt(2, 10),\n\t\t\tserieLength = 5;//getRandomInt(2, 10);\n\t\n\t\tfor (var i = series; i--; ) {\n\t\t\tvar tmp = [];\n\t\t\tfor (var j = serieLength; j--; ) {\n\t\t\t\ttmp.push(getRandomInt(0, 20));\n\t\t\t}\n\t\t\tdata.push(tmp);\t\t\t\n\t\t}\n\t\t\n\t\tthis.setState({ data: data });\n    }\n    \n    render() {\n        return (\n            <div className=\"Container\">\n                <div className=\"App-header\">\n                    <p>tugas big data analytics</p>\n                </div>\n                <div className=\"Body\"> \n            \n                {/* <ChartComponent data={ this.state.data }\n\t\t\t\t\tlabels={ this.state.series }\n\t\t\t\t\tcolors={ this.state.colors }\n                    // height={ 250 }\n                    width={800}\n                /> */}\n\n                <Legend labels={ this.state.labels } colors={ this.state.colors } />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}