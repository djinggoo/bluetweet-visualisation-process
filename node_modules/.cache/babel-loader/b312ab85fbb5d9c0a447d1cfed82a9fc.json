{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/tugas-big-data/src/component/index.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { Bar } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setInterval = () => {\n      setInterval(this.getData, 10000);\n    };\n\n    this.getData = () => {\n      const urlData = \"https://bigdataanalytic.herokuapp.com/sentiment\";\n      let data = [];\n      axios.get(urlData, {}, {\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      }).then(response => {\n        if (response.status === 200 && response.data !== \"undefined\") {\n          data.push(response.data);\n          this.getDataResponse(data);\n        }\n      }).catch(function (err) {\n        return console.log(\"error get data\", err);\n      });\n    };\n\n    this.getDataResponse = value => {\n      let dataSet = this.state;\n      let tempData = [],\n          dataFromApiTemp = [];\n\n      _.map(value, v => {\n        let data = [...v];\n\n        _.map(data, item => {\n          console.log(\"value\", item['id']);\n          dataFromApiTemp.push(item.value);\n        });\n      }); // let dataKosong = [...dataFromApiTemp];\n      // _.map(dataKosong, (key, value) => {\n      //   if (!!dataKosong) {\n      //     switch (key) {\n      //       case \"1\":\n      //         console.log(\"cek banyak data 1\", value);\n      //         break;\n      //       case \"-1\":\n      //         console.log(\"cek banyak data -1\", value);\n      //         break;\n      //       default:\n      //         console.log(\"cek banyak data 0\", value);;\n      //     }\n      //   }\n      // });\n\n\n      return dataSet;\n    };\n\n    this.state = {\n      labels: [\"twitter stream\"],\n      datasets: [{\n        label: \"sentimen positif\",\n        backgroundColor: \"rgba(75,192,192,1)\",\n        data: [55]\n      }, {\n        label: \"sentimen netral\",\n        backgroundColor: \"rgb(228,227,115)\",\n        data: [65]\n      }, {\n        label: \"sentimen negatif\",\n        backgroundColor: \"rgb(227,21,55)\",\n        data: [70]\n      }],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    console.log(\"set data\", this.getDataResponse);\n    return React.createElement(\"div\", {\n      className: \"Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Tugas big data analytics\")), React.createElement(\"div\", {\n      className: \"Body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: this.getDataResponse(),\n      options: {\n        title: {\n          display: true,\n          text: \"Sentimen Analisis BDA\",\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: \"bottom\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/macintosh/tugas-big-data/src/component/index.js"],"names":["React","Component","Bar","axios","_","Home","constructor","props","setInterval","getData","urlData","data","get","headers","then","response","status","push","getDataResponse","catch","err","console","log","value","dataSet","state","tempData","dataFromApiTemp","map","v","item","labels","datasets","label","backgroundColor","componentDidMount","render","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { Bar } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      labels: [\"twitter stream\"],\n      datasets: [\n        {\n          label: \"sentimen positif\",\n          backgroundColor: \"rgba(75,192,192,1)\",\n          data: [55]\n        },\n        {\n          label: \"sentimen netral\",\n          backgroundColor: \"rgb(228,227,115)\",\n          data: [65]\n        },\n        {\n          label: \"sentimen negatif\",\n          backgroundColor: \"rgb(227,21,55)\",\n          data: [70]\n        }\n      ],\n      data: []\n    };\n  }\n\n  setInterval = () => {\n    setInterval(this.getData, 10000);\n  };\n\n  getData = () => {\n    const urlData = \"https://bigdataanalytic.herokuapp.com/sentiment\";\n    let data = [];\n    axios\n      .get(\n        urlData,\n        {},\n        {\n          headers: {\n            \"content-type\": \"application/json\"\n          }\n        }\n      )\n      .then(response => {\n        if (response.status === 200 && response.data !== \"undefined\") {\n          data.push(response.data);\n          this.getDataResponse(data);\n        }\n      })\n      .catch(function(err) {\n        return console.log(\"error get data\", err);\n      });\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getDataResponse = value => {\n    let dataSet = this.state;\n    let tempData = [], dataFromApiTemp = [];\n    _.map(value, v => {\n        let data = [...v]\n      _.map(data, item => {\n        console.log(\"value\", item['id'])\n        dataFromApiTemp.push(item.value);\n      });\n    });\n\n    // let dataKosong = [...dataFromApiTemp];\n    // _.map(dataKosong, (key, value) => {\n    //   if (!!dataKosong) {\n    //     switch (key) {\n    //       case \"1\":\n    //         console.log(\"cek banyak data 1\", value);\n    //         break;\n    //       case \"-1\":\n    //         console.log(\"cek banyak data -1\", value);\n    //         break;\n    //       default:\n    //         console.log(\"cek banyak data 0\", value);;\n    //     }\n    //   }\n    // });\n    return dataSet;\n  };\n\n  render() {\n    console.log(\"set data\", this.getDataResponse);\n    return (\n      <div className=\"Container\">\n        <div className=\"App-header\">\n          <p>Tugas big data analytics</p>\n        </div>\n        <div className=\"Body\">\n          <Bar\n            data={this.getDataResponse()}\n            options={{\n              title: {\n                display: true,\n                text: \"Sentimen Analisis BDA\",\n                fontSize: 20\n              },\n              legend: {\n                display: true,\n                position: \"bottom\"\n              }\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}