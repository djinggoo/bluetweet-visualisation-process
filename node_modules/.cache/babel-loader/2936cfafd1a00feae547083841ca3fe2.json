{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/tugas-big-data/src/component/index.js\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport { Bar } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = () => {\n      const urlData = \"https://bluetweets.herokuapp.com/sentiment\";\n      let data = [];\n      axios.get(urlData, {}, {\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      }).then(response => {\n        if (response.status === 200 && response.data !== \"undefined\") {\n          data.push(response.data);\n          console.log(\"cek data\", data);\n          this.getDataResponse(data);\n        }\n      }).catch(function (err) {\n        return console.log(\"error get data\", err);\n      });\n    };\n\n    this.setInterval = () => {\n      setInterval(this.getData, 10000);\n    };\n\n    this.handleDataToDisplay = value => {\n      let datanormal,\n          datanegatif,\n          datapositif = [];\n      let tempData = [...this.state.datasets];\n\n      _.map(value, v => {\n        let data = [...v];\n\n        _.map(data, item => {\n          switch (item.word) {\n            case 'POSITIF':\n              datapositif = item.value;\n              break;\n\n            case 'NEGATIF':\n              datanegatif = item.value;\n              break;\n\n            default:\n              datanormal = item.value;\n          }\n        });\n      });\n\n      if (!!datanormal) {\n        _.map(tempData, v => {\n          switch (v.id) {\n            case 'positif':\n              v.data[0] = datapositif;\n              break;\n\n            case 'negatif':\n              v.data[0] = datanegatif;\n              break;\n\n            default:\n              v.data[0] = datanormal;\n          }\n        });\n\n        if (tempData !== this.state.datasets) {\n          this.setState({\n            datasets: tempData\n          });\n        }\n      }\n    };\n\n    this.getDataResponse = value => {\n      this.handleDataToDisplay(value);\n      let dataSet = this.state;\n      return dataSet;\n    };\n\n    this.state = {\n      labels: [\"twitter stream\"],\n      datasets: [{\n        id: 'positif',\n        label: \"sentimen positif\",\n        backgroundColor: \"rgba(75,192,192,1)\",\n        data: [0]\n      }, {\n        id: 'netral',\n        label: \"sentimen netral\",\n        backgroundColor: \"rgb(228,227,115)\",\n        data: [0]\n      }, {\n        id: 'negatif',\n        label: \"sentimen negatif\",\n        backgroundColor: \"rgb(227,21,55)\",\n        data: [0]\n      }],\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Tugas big data analytics\")), React.createElement(\"div\", {\n      className: \"Body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: this.getDataResponse(),\n      options: {\n        title: {\n          display: true,\n          text: \"Sentimen Analisis Presiden\",\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: \"bottom\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/macintosh/tugas-big-data/src/component/index.js"],"names":["React","Component","Bar","axios","_","Home","constructor","props","getData","urlData","data","get","headers","then","response","status","push","console","log","getDataResponse","catch","err","setInterval","handleDataToDisplay","value","datanormal","datanegatif","datapositif","tempData","state","datasets","map","v","item","word","id","setState","dataSet","labels","label","backgroundColor","componentDidMount","render","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { Bar } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      labels: [\"twitter stream\"],\n      datasets: [\n        {\n          id: 'positif',\n          label: \"sentimen positif\",\n          backgroundColor: \"rgba(75,192,192,1)\",\n          data: [0]\n        },\n        {\n          id: 'netral',\n          label: \"sentimen netral\",\n          backgroundColor: \"rgb(228,227,115)\",\n          data: [0]\n        },\n        {\n          id: 'negatif',\n          label: \"sentimen negatif\",\n          backgroundColor: \"rgb(227,21,55)\",\n          data: [0]\n        }\n      ],\n      data: []\n    };\n  }\n\n  getData = () => {\n    const urlData = \"https://bluetweets.herokuapp.com/sentiment\";\n    let data = [];\n    axios\n      .get(\n        urlData,\n        {},\n        {\n          headers: {\n            \"content-type\": \"application/json\"\n          }\n        }\n      )\n      .then(response => {\n        if (response.status === 200 && response.data !== \"undefined\") {\n          data.push(response.data);\n          console.log(\"cek data\", data)\n          this.getDataResponse(data);\n        }\n      })\n      .catch(function(err) {\n        return console.log(\"error get data\", err);\n      });\n  };\n\n  setInterval = () => {\n    setInterval(this.getData, 10000);\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  handleDataToDisplay = (value) =>{\n    let datanormal, datanegatif, datapositif = [];\n    let tempData = [...this.state.datasets]\n    \n    _.map(value, v => {\n        let data = [...v]\n      _.map(data, item => {\n        switch (item.word) {\n          case 'POSITIF':\n            datapositif = item.value;\n            break;\n          case 'NEGATIF':\n            datanegatif = item.value;\n          break;\n          default:\n            datanormal = item.value;\n        }\n      });\n    });\n\n    if(!!datanormal){\n      _.map(tempData, v =>{\n        switch (v.id) {\n          case 'positif':\n            v.data[0] = datapositif\n            break;\n          case 'negatif':\n            v.data[0] = datanegatif\n          break;\n          default:\n            v.data[0] = datanormal\n        }\n      })\n      if(tempData !== this.state.datasets){\n        this.setState({datasets: tempData})\n      }\n    }\n  }\n  \n\n  getDataResponse = value => {\n    this.handleDataToDisplay(value)\n    let dataSet = this.state;\n    return dataSet;\n  };\n\n  render() {\n    return (\n      <div className=\"Container\">\n        <div className=\"App-header\">\n          <p>Tugas big data analytics</p>\n        </div>\n        <div className=\"Body\">\n          <Bar\n            data={this.getDataResponse()}\n            options={{\n              title: {\n                display: true,\n                text: \"Sentimen Analisis Presiden\",\n                fontSize: 20\n              },\n              legend: {\n                display: true,\n                position: \"bottom\"\n              }\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}