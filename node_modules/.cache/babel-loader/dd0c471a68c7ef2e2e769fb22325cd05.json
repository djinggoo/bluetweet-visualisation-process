{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/tugas-big-data/src/component/index.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Bar } from 'react-chartjs-2';\nimport Chart from 'chart.js';\nimport ChartComponent from './chartComponent';\nimport Legend from './legend';\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nconst state = {\n  labels: ['January', 'February', 'March', 'April', 'May'],\n  datasets: [{\n    label: 'Rainfall',\n    backgroundColor: 'rgba(75,192,192,1)',\n    borderColor: 'rgba(0,0,0,1)',\n    borderWidth: 2,\n    data: [65, 59, 80, 81, 56]\n  }]\n};\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [30, 20, 10],\n      series: ['France'],\n      labels: ['netral', 'negatif', 'positif'],\n      colors: ['#F2317A', '#FF9824', '#58CF6C']\n    };\n  } // componentDidMount() {\n  // \tthis.populateArray();\n  // \t// setInterval(this.populateArray, 2000);\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"tugas big data analytics\")), React.createElement(\"div\", {\n      className: \"Body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: state,\n      type: \"horizontalBar\" // labels={ this.state.series }\n      // colors={ this.state.colors }\n      ,\n      height: 10,\n      width: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(Legend, {\n      labels: this.state.labels,\n      colors: this.state.colors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/macintosh/tugas-big-data/src/component/index.js"],"names":["React","Component","Bar","Chart","ChartComponent","Legend","getRandomInt","min","max","Math","floor","random","compareNumbers","a","b","state","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","Home","constructor","props","series","colors","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5B,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,CAAX,IAA0CA,GAAjD;AACH;;AAED,SAASK,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;AAC1B,SAAOD,CAAC,GAAGC,CAAX;AACH;;AAED,MAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EACC,OADD,EACU,KADV,CADE;AAGVC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,eAAe,EAAE,oBAFnB;AAGEC,IAAAA,WAAW,EAAE,eAHf;AAIEC,IAAAA,WAAW,EAAE,CAJf;AAKEC,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB;AALR,GADQ;AAHA,CAAd;;AAeA,MAAMC,IAAN,SAAmBtB,SAAnB,CAA6B;AACzBuB,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKV,KAAL,GAAW;AACPO,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CADC;AAEhBI,MAAAA,MAAM,EAAE,CAAC,QAAD,CAFQ;AAGhBV,MAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,SAAtB,CAHQ;AAIhBW,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB;AAJQ,KAAX;AAMH,GAVwB,CAYzB;AACH;AACA;AACG;;;AAEAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAEb,KAAX;AACI,MAAA,IAAI,EAAC,eADT,CAEX;AACA;AAHW;AAII,MAAA,MAAM,EAAG,EAJb;AAKI,MAAA,KAAK,EAAE,EALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAJJ,EAaI,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAG,KAAKA,KAAL,CAAWC,MAA5B;AAAqC,MAAA,MAAM,EAAG,KAAKD,KAAL,CAAWY,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADJ;AAiBH;;AAnCwB;;AAsC7B,eAAeJ,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css'\nimport {Bar} from 'react-chartjs-2';\nimport Chart from 'chart.js'\nimport ChartComponent from './chartComponent';\nimport Legend from './legend'\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n  \nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nconst state = {\n    labels: ['January', 'February', 'March',\n             'April', 'May'],\n    datasets: [\n      {\n        label: 'Rainfall',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: [65, 59, 80, 81, 56]\n      }\n    ]\n}\n\n\nclass Home extends Component {\n    constructor(props){\n        super(props)\n\n        this.state={\n            data: [30, 20, 10],\n\t\t\tseries: ['France'],\n\t\t\tlabels: ['netral', 'negatif', 'positif'],\n\t\t\tcolors: ['#F2317A', '#FF9824', '#58CF6C']\n        }\n    }\n\n    // componentDidMount() {\n\t// \tthis.populateArray();\n\t// \t// setInterval(this.populateArray, 2000);\n    // }\n    \n    render() {\n        return (\n            <div className=\"Container\">\n                <div className=\"App-header\">\n                    <p>tugas big data analytics</p>\n                </div>\n                <div className=\"Body\"> \n                <Bar data={state}\n                    type='horizontalBar'\n\t\t\t\t\t// labels={ this.state.series }\n\t\t\t\t\t// colors={ this.state.colors }\n                    height={ 10 }\n                    width={50}\n                ></Bar>              \n                </div>\n                <Legend labels={ this.state.labels } colors={ this.state.colors } />\n            </div>\n        );\n    }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}