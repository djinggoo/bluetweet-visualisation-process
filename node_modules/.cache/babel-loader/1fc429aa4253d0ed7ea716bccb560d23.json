{"ast":null,"code":"var _jsxFileName = \"/Users/macintosh/tugas-big-data/src/component/index.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      labels: ['twitter stream'],\n      datasets: [{\n        label: 'sentimen positif',\n        backgroundColor: 'rgba(75,192,192,1)',\n        data: [55]\n      }, {\n        label: 'sentimen netral',\n        backgroundColor: 'rgb(228,227,115)',\n        data: [65]\n      }, {\n        label: 'sentimen negatif',\n        backgroundColor: 'rgb(227,21,55)',\n        data: [70]\n      }],\n      width: 500\n    };\n  }\n\n  loadCached() {\n    const urlData = 'https://bigdataanalytic.herokuapp.com/sentiment';\n    axios.post(urlData, {}, {\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(function (response) {\n      return response;\n    }).catch(function (err) {\n      return console.log(\"error get data\", err);\n    });\n  }\n\n  setInterval() {\n    setInterval(timer, 5000);\n    this.state.count *= 60;\n\n    function timer() {\n      console.log(\"set interval true\");\n    }\n  }\n\n  render() {\n    // console.log(\"cek promise\", this.setInterval())\n    this.setInterval();\n    return React.createElement(\"div\", {\n      className: \"Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Tugas big data analytics\")), React.createElement(\"div\", {\n      className: \"Body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: this.state,\n      options: {\n        title: {\n          display: true,\n          text: 'Sentimen Analisis BDA',\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'bottom'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/macintosh/tugas-big-data/src/component/index.js"],"names":["React","Component","Bar","axios","Home","constructor","props","state","labels","datasets","label","backgroundColor","data","width","loadCached","urlData","post","headers","then","response","catch","err","console","log","setInterval","timer","count","render","title","display","text","fontSize","legend","position"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AACzBI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACPC,MAAAA,MAAM,EAAE,CAAC,gBAAD,CADD;AAEPC,MAAAA,QAAQ,EAAE,CACN;AACIC,QAAAA,KAAK,EAAE,kBADX;AAEIC,QAAAA,eAAe,EAAE,oBAFrB;AAGIC,QAAAA,IAAI,EAAE,CAAC,EAAD;AAHV,OADM,EAMN;AACIF,QAAAA,KAAK,EAAE,iBADX;AAEIC,QAAAA,eAAe,EAAE,kBAFrB;AAGIC,QAAAA,IAAI,EAAE,CAAC,EAAD;AAHV,OANM,EAWN;AACIF,QAAAA,KAAK,EAAE,kBADX;AAEIC,QAAAA,eAAe,EAAE,gBAFrB;AAGIC,QAAAA,IAAI,EAAE,CAAC,EAAD;AAHV,OAXM,CAFH;AAmBPC,MAAAA,KAAK,EAAE;AAnBA,KAAX;AAqBH;;AAEDC,EAAAA,UAAU,GAAG;AACT,UAAMC,OAAO,GAAG,iDAAhB;AACAZ,IAAAA,KAAK,CAACa,IAAN,CACID,OADJ,EAEI,EAFJ,EAGI;AACIE,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADb,KAHJ,EAQKC,IARL,CAQU,UAAUC,QAAV,EAAoB;AACtB,aAAOA,QAAP;AACH,KAVL,EAUOC,KAVP,CAUa,UAAUC,GAAV,EAAe;AACpB,aAAOC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,GAA9B,CAAP;AACH,KAZL;AAcH;;AAEDG,EAAAA,WAAW,GAAE;AACRA,IAAAA,WAAW,CAACC,KAAD,EAAS,IAAT,CAAX;AACA,SAAKlB,KAAL,CAAWmB,KAAX,IAAoB,EAApB;;AACG,aAASD,KAAT,GAAiB;AACbH,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACR;;AAEDI,EAAAA,MAAM,GAAG;AACL;AACA,SAAKH,WAAL;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AACI,MAAA,IAAI,EAAE,KAAKjB,KADf;AAEI,MAAA,OAAO,EAAE;AACLqB,QAAAA,KAAK,EAAC;AACFC,UAAAA,OAAO,EAAC,IADN;AAEFC,UAAAA,IAAI,EAAC,uBAFH;AAGFC,UAAAA,QAAQ,EAAC;AAHP,SADD;AAMLC,QAAAA,MAAM,EAAC;AACHH,UAAAA,OAAO,EAAC,IADL;AAEHI,UAAAA,QAAQ,EAAC;AAFN;AANF,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAJJ,CADJ;AAwBH;;AAjFwB;;AAoF7B,eAAe7B,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css'\nimport {Bar} from 'react-chartjs-2';\nimport axios from 'axios'\n\nclass Home extends Component {\n    constructor(props){\n        super(props)\n\n        this.state={\n            labels: ['twitter stream'],\n            datasets: [\n                {\n                    label: 'sentimen positif',\n                    backgroundColor: 'rgba(75,192,192,1)',\n                    data: [55]\n                },\n                {\n                    label: 'sentimen netral',\n                    backgroundColor: 'rgb(228,227,115)',\n                    data: [65]\n                },\n                {\n                    label: 'sentimen negatif',\n                    backgroundColor: 'rgb(227,21,55)',\n                    data: [70]\n                }\n            ],\n            width: 500\n        }\n    }\n\n    loadCached() {\n        const urlData = 'https://bigdataanalytic.herokuapp.com/sentiment'\n        axios.post(\n            urlData,\n            {},\n            {\n                headers: {\n                    'content-type': 'application/json'\n                },\n            })\n            .then(function (response) {\n                return response\n            }).catch(function (err) {\n                return console.log(\"error get data\", err)\n            }\n        )\n    }\n\n    setInterval(){\n         setInterval(timer , 5000)\n         this.state.count *= 60;\n            function timer() {\n                console.log(\"set interval true\")\n            }\n    }\n\n    render() {\n        // console.log(\"cek promise\", this.setInterval())\n        this.setInterval()\n\n        return (\n            <div className=\"Container\">\n                <div className=\"App-header\">\n                    <p>Tugas big data analytics</p>\n                </div>\n                <div className=\"Body\"> \n                <Bar\n                    data={this.state}\n                    options={{\n                        title:{\n                            display:true,\n                            text:'Sentimen Analisis BDA',\n                            fontSize:20\n                        },\n                        legend:{\n                            display:true,\n                            position:'bottom'\n                        }\n                    }}\n                />            \n                </div>\n                {/* <Legend labels={ this.state.labels } colors={ this.state.colors } /> */}\n            </div>\n        );\n    }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}